#!/usr/bin/env python
import os
import sys

# 1) –ß—Ç–æ–±—ã –Ω–∞—à src –±—ã–ª –≤ PYTHONPATH
sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..', 'src')))

from main import create_app, db
from adapters.outbound.persistence.repositories.user_rep import SQLAlchemyUserRepository

# –∑–¥–µ—Å—å –±–µ—Ä—ë–º Base –∏–∑ –≤–∞—à–µ–≥–æ –ø–∞–∫–µ—Ç–∞ –º–æ–¥–µ–ª–µ–π
from adapters.outbound.persistence.models.base import Base


def run_all():
    app = create_app(auto_init=False)
    with app.app_context():
        # 1) –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø–∞–∫–µ—Ç –º–æ–¥–µ–ª–µ–π, —á—Ç–æ–±—ã Base.metadata –Ω–∞–ø–æ–ª–Ω–∏–ª—Å—è –≤—Å–µ–º–∏ Table
        import adapters.outbound.persistence.models

        # 2) –°–æ–∑–¥–∞—ë–º —Å—Ö–µ–º—É –ø–æ –≤–∞—à–µ–º—É Base
        print("‚û§ Creating database tables ‚Ä¶")
        Base.metadata.create_all(bind=db.engine)
        print("‚úî Tables created.")

        # 3) –ó–∞–ª–∏–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        print("‚û§ Pre-filling test users ‚Ä¶")
        session = db.session
        repo = SQLAlchemyUserRepository(session)
        users = [
            {'username': 'alice', 'email': 'alice@example.com', 'password_hash': 'hash1'},
            {'username': 'bob',   'email': 'bob@example.com',   'password_hash': 'hash2'},
            {'username': 'carol', 'email': 'carol@example.com', 'password_hash': 'hash3'},
        ]
        for u in users:
            if not repo.get_by_username(u['username']):
                repo.create(**u)
        session.commit()
        print("‚úî Test users created.")

    print("üéâ Pre-initialization complete.")


if __name__ == '__main__':
    run_all()
